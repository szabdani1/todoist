{"version":3,"sources":["firebase.js","constants/index.js","helpers/index.js","context/projects-context.js","hooks/index.js","context/selected-project-context.js","components/ProjectOverlay.js","components/TaskDate.js","components/AddTask.js","components/layout/Header.js","components/IndividualProject.js","components/Projects.js","components/AddProject.js","components/layout/Sidebar.js","components/Checkbox.js","components/Tasks.js","components/layout/Content.js","App.js","index.js"],"names":["firebaseConfig","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","collatedTasks","key","name","collatedTasksExist","selectedProject","find","task","generatePushId","PUSH_CHARS","lastRandChars","now","Date","getTime","timeStampChars","Array","i","charAt","Math","floor","id","join","ProjectsContext","createContext","ProjectsProvider","children","useState","projects","setProjects","useEffect","firestore","collection","where","orderBy","get","then","snapshot","allProjects","docs","map","project","data","docId","JSON","stringify","useProjects","Provider","value","useProjectsValue","useContext","SelectedProjectContext","SelectedProjectProvider","setSelectedProject","useSelectedProjectValue","ProjectOverlay","setProject","showProjectOverlay","setShowProjectOverlay","className","data-testid","onClick","onKeyDown","e","role","tabIndex","aria-label","TaskDate","setTaskDate","showTaskDate","setShowTaskDate","moment","format","add","AddTask","showAddTaskMain","shouldShowMain","showQuickAddTask","setShowQuickAddTask","setTask","taskDate","showMain","setShowMain","addTask","collatedDate","archived","date","userId","type","onChange","target","Header","darkMode","setDarkMode","setShouldShowMain","src","alt","IndividualProject","showConfirm","setShowConfirm","doc","delete","Projects","activeValue","active","setActive","data-doc-id","AddProject","shouldShow","show","setShow","projectName","setProjectName","placeholder","Sidebar","showProjects","setShowProjects","undefined","Checkbox","taskDesc","archiveTask","update","Tasks","tasks","setTasks","archivedTasks","setArchivedTasks","unsubscribe","onSnapshot","newTasks","filter","diff","useTasks","getCollatedTitle","length","getTitle","document","title","Content","App","darkModeDefault","render","getElementById"],"mappings":"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","file":"static/js/main.abcb1f2e.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = firebase.initializeApp({\r\n    apiKey: \"AIzaSyA3Bl9d4kg-6cYE3_W9Z2-FsZZ4LEyoWsc\",\r\n    authDomain: \"todoist-8f434.firebaseapp.com\",\r\n    databaseURL: \"https://todoist-8f434.firebaseio.com\",\r\n    projectId: \"todoist-8f434\",\r\n    storageBucket: \"todoist-8f434.appspot.com\",\r\n    messagingSenderId: \"871246003680\",\r\n    appId: \"1:871246003680:web:7423db454ce0713b153f85\"\r\n});\r\n\r\nexport {firebaseConfig as firebase};","export const collatedTasks = [\r\n  { key: 'INBOX', name: 'Inbox' },\r\n  { key: 'TODAY', name: 'Today' },\r\n  { key: 'NEXT_7', name: 'Next 7 Days' },\r\n];","import { collatedTasks } from '../constants';\r\n\r\nexport const getTitle = (projects, projectId) =>\r\n  projects.find(project => project.projectId === projectId);\r\n\r\nexport const getCollatedTitle = (projects, key) =>\r\n  projects.find(project => project.key === key);\r\n\r\nexport const collatedTasksExist = selectedProject =>\r\n  collatedTasks.find(task => task.key === selectedProject);\r\n\r\nexport const generatePushId = (() => {\r\n  const PUSH_CHARS =\r\n    '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n\r\n  const lastRandChars = [];\r\n\r\n  return function() {\r\n    let now = new Date().getTime();\r\n\r\n    const timeStampChars = new Array(8);\r\n    for (var i = 7; i >= 0; i--) {\r\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n      now = Math.floor(now / 64);\r\n    }\r\n\r\n    let id = timeStampChars.join('');\r\n\r\n    for (i = 0; i < 12; i++) {\r\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n    }\r\n\r\n    return id;\r\n  };\r\n})();\r\n","import React, { createContext, useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useProjects } from '../hooks';\r\n\r\nexport const ProjectsContext = createContext();\r\nexport const ProjectsProvider = ({ children }) => {\r\n  const { projects, setProjects } = useProjects();\r\n\r\n  return (\r\n    <ProjectsContext.Provider value={{ projects, setProjects }}>\r\n      {children}\r\n    </ProjectsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useProjectsValue = () => useContext(ProjectsContext);\r\n\r\nProjectsProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport { firebase } from '../firebase';\r\nimport { collatedTasksExist } from '../helpers';\r\n\r\nexport const useTasks = selectedProject => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [archivedTasks, setArchivedTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let unsubscribe = firebase\r\n      .firestore()\r\n      .collection('tasks')\r\n      .where('userId', '==', 'jlIFXIwyAL3tzHMtzRbw');\r\n\r\n    unsubscribe =\r\n      selectedProject && !collatedTasksExist(selectedProject)\r\n        ? (unsubscribe = unsubscribe.where('projectId', '==', selectedProject))\r\n        : selectedProject === 'TODAY'\r\n        ? (unsubscribe = unsubscribe.where(\r\n            'date',\r\n            '==',\r\n            moment().format('DD/MM/YYYY')\r\n          ))\r\n        : selectedProject === 'INBOX' || selectedProject === 0\r\n        ? (unsubscribe = unsubscribe.where('date', '==', ''))\r\n        : unsubscribe;\r\n\r\n    unsubscribe = unsubscribe.onSnapshot(snapshot => {\r\n      const newTasks = snapshot.docs.map(task => ({\r\n        id: task.id,\r\n        ...task.data(),\r\n      }));\r\n\r\n      setTasks(\r\n        selectedProject === 'NEXT_7'\r\n          ? newTasks.filter(\r\n              task =>\r\n                moment(task.date, 'DD-MM-YYYY').diff(moment(), 'days') <= 7 &&\r\n                task.archived !== true\r\n            )\r\n          : newTasks.filter(task => task.archived !== true)\r\n      );\r\n      setArchivedTasks(newTasks.filter(task => task.archived !== false));\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [selectedProject]);\r\n\r\n  return { tasks, archivedTasks };\r\n};\r\n\r\nexport const useProjects = () => {\r\n  const [projects, setProjects] = useState([]);\r\n\r\n  useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .collection('projects')\r\n      .where('userId', '==', 'jlIFXIwyAL3tzHMtzRbw')\r\n      .orderBy('projectId')\r\n      .get()\r\n      .then(snapshot => {\r\n        const allProjects = snapshot.docs.map(project => ({\r\n          ...project.data(),\r\n          docId: project.id,\r\n        }));\r\n\r\n        if (JSON.stringify(allProjects) !== JSON.stringify(projects)) {\r\n          setProjects(allProjects);\r\n        }\r\n      });\r\n  }, [projects]);\r\n\r\n  return { projects, setProjects };\r\n};\r\n","import React, { createContext, useContext, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const SelectedProjectContext = createContext();\r\nexport const SelectedProjectProvider = ({ children }) => {\r\n  const [selectedProject, setSelectedProject] = useState('INBOX');\r\n\r\n  return (\r\n    <SelectedProjectContext.Provider\r\n      value={{ selectedProject, setSelectedProject }}\r\n    >\r\n      {children}\r\n    </SelectedProjectContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useSelectedProjectValue = () => useContext(SelectedProjectContext);\r\n\r\nSelectedProjectProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useProjectsValue } from '../context';\r\n\r\nexport const ProjectOverlay = ({\r\n  setProject,\r\n  showProjectOverlay,\r\n  setShowProjectOverlay,\r\n}) => {\r\n  const { projects } = useProjectsValue();\r\n\r\n  return (\r\n    projects &&\r\n    showProjectOverlay && (\r\n      <div className=\"project-overlay\" data-testid=\"project-overlay\">\r\n        <ul className=\"project-overlay__list\">\r\n          {projects.map((project) => (\r\n            <li key={project.projectId}>\r\n              <div\r\n                data-testid=\"project-overlay-action\"\r\n                onClick={() => {\r\n                  setProject(project.projectId);\r\n                  setShowProjectOverlay(false);\r\n                }}\r\n                onKeyDown={(e) => {\r\n                  if (e.key === 'Enter') {\r\n                    setProject(project.projectId);\r\n                    setShowProjectOverlay(false);\r\n                  }\r\n                }}\r\n                role=\"button\"\r\n                tabIndex={0}\r\n                aria-label=\"Select the task project\"\r\n              >\r\n                {project.name}\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nProjectOverlay.propTypes = {\r\n  projects: PropTypes.array,\r\n};\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { FaSpaceShuttle, FaSun, FaRegPaperPlane } from 'react-icons/fa';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const TaskDate = ({ setTaskDate, showTaskDate, setShowTaskDate }) =>\r\n  showTaskDate && (\r\n    <div className=\"task-date\" data-testid=\"task-date-overlay\">\r\n      <ul className=\"task-date__list\">\r\n        <li>\r\n          <div\r\n            onClick={() => {\r\n              setShowTaskDate(false);\r\n              setTaskDate(moment().format('DD/MM/YYYY'));\r\n            }}\r\n            onKeyDown={(e) => {\r\n              if (e.key === 'Enter') {\r\n                setShowTaskDate(false);\r\n                setTaskDate(moment().format('DD/MM/YYYY'));\r\n              }\r\n            }}\r\n            data-testid=\"task-date-today\"\r\n            tabIndex={0}\r\n            aria-label=\"Select today as the task date\"\r\n            role=\"button\"\r\n          >\r\n            <span>\r\n              <FaSpaceShuttle />\r\n            </span>\r\n            <span>Today</span>\r\n          </div>\r\n        </li>\r\n        <li>\r\n          <div\r\n            onClick={() => {\r\n              setShowTaskDate(false);\r\n              setTaskDate(moment().add(1, 'day').format('DD/MM/YYYY'));\r\n            }}\r\n            onKeyDown={(e) => {\r\n              if (e.key === 'Enter') {\r\n                setShowTaskDate(false);\r\n                setTaskDate(moment().add(1, 'day').format('DD/MM/YYYY'));\r\n              }\r\n            }}\r\n            data-testid=\"task-date-tomorrow\"\r\n            role=\"button\"\r\n            tabIndex={0}\r\n            aria-label=\"Select tomorrow as the task date\"\r\n          >\r\n            <span>\r\n              <FaSun />\r\n            </span>\r\n            <span>Tomorrow</span>\r\n          </div>\r\n        </li>\r\n        <li>\r\n          <div\r\n            onClick={() => {\r\n              setShowTaskDate(false);\r\n              setTaskDate(moment().add(7, 'days').format('DD/MM/YYYY'));\r\n            }}\r\n            onKeyDown={(e) => {\r\n              if (e.key === 'Enter') {\r\n                setShowTaskDate(false);\r\n                setTaskDate(moment().add(7, 'days').format('DD/MM/YYYY'));\r\n              }\r\n            }}\r\n            data-testid=\"task-date-next-week\"\r\n            aria-label=\"Select next week as the task date\"\r\n            tabIndex={0}\r\n            role=\"button\"\r\n          >\r\n            <span>\r\n              <FaRegPaperPlane />\r\n            </span>\r\n            <span>Next week</span>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n\r\nTaskDate.propTypes = {\r\n  setTaskDate: PropTypes.func.isRequired,\r\n  showTaskDate: PropTypes.bool.isRequired,\r\n  setShowTaskDate: PropTypes.func.isRequired,\r\n};\r\n","import React, { useState } from 'react';\r\nimport { FaRegListAlt, FaRegCalendarAlt } from 'react-icons/fa';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport { firebase } from '../firebase';\r\nimport { useSelectedProjectValue } from '../context';\r\nimport { ProjectOverlay } from './ProjectOverlay';\r\nimport { TaskDate } from './TaskDate';\r\n\r\nexport const AddTask = ({\r\n  showAddTaskMain = true,\r\n  shouldShowMain = false,\r\n  showQuickAddTask,\r\n  setShowQuickAddTask,\r\n}) => {\r\n  const [task, setTask] = useState('');\r\n  const [taskDate, setTaskDate] = useState('');\r\n  const [project, setProject] = useState('');\r\n  const [showMain, setShowMain] = useState(shouldShowMain);\r\n  const [showProjectOverlay, setShowProjectOverlay] = useState(false);\r\n  const [showTaskDate, setShowTaskDate] = useState(false);\r\n\r\n  const { selectedProject } = useSelectedProjectValue();\r\n\r\n  const addTask = () => {\r\n    const projectId = project || selectedProject;\r\n    let collatedDate = '';\r\n\r\n    if (projectId === 'TODAY') {\r\n      collatedDate = moment().format('DD/MM/YYYY');\r\n    } else if (projectId === 'NEXT_7') {\r\n      collatedDate = moment().add(7, 'days').format('DD/MM/YYYY');\r\n    }\r\n\r\n    return (\r\n      task &&\r\n      projectId &&\r\n      firebase\r\n        .firestore()\r\n        .collection('tasks')\r\n        .add({\r\n          archived: false,\r\n          projectId,\r\n          task,\r\n          date: collatedDate || taskDate,\r\n          userId: 'jlIFXIwyAL3tzHMtzRbw',\r\n        })\r\n        .then(() => {\r\n          setTask('');\r\n          setProject('');\r\n          setShowMain('');\r\n          setShowProjectOverlay(false);\r\n        })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={showQuickAddTask ? 'add-task add-task__overlay' : 'add-task'}\r\n      data-testid=\"add-task-comp\"\r\n    >\r\n      {showAddTaskMain && (\r\n        <div\r\n          className=\"add-task__shallow\"\r\n          data-testid=\"show-main-action\"\r\n          onClick={() => setShowMain(!showMain)}\r\n          onKeyDown={(e) => {\r\n            if (e.key === 'Enter') setShowMain(!showMain);\r\n          }}\r\n          tabIndex={0}\r\n          aria-label=\"Add task\"\r\n          role=\"button\"\r\n        >\r\n          <span className=\"add-task__plus\">+</span>\r\n          <span className=\"add-task__text\">Add Task</span>\r\n        </div>\r\n      )}\r\n\r\n      {(showMain || showQuickAddTask) && (\r\n        <div className=\"add-task__main\" data-testid=\"add-task-main\">\r\n          {showQuickAddTask && (\r\n            <>\r\n              <div data-testid=\"quick-add-task\">\r\n                <h2 className=\"header\">Quick Add Task</h2>\r\n                <span\r\n                  className=\"add-task__cancel-x\"\r\n                  data-testid=\"add-task-quick-cancel\"\r\n                  aria-label=\"Cancel adding task\"\r\n                  onClick={() => {\r\n                    setShowMain(false);\r\n                    setShowProjectOverlay(false);\r\n                    setShowQuickAddTask(false);\r\n                  }}\r\n                  onKeyDown={(e) => {\r\n                    if (e.key === 'Enter') {\r\n                      setShowMain(false);\r\n                      setShowProjectOverlay(false);\r\n                      setShowQuickAddTask(false);\r\n                    }\r\n                  }}\r\n                  tabIndex={0}\r\n                  role=\"button\"\r\n                >\r\n                  X\r\n                </span>\r\n              </div>\r\n            </>\r\n          )}\r\n          <ProjectOverlay\r\n            setProject={setProject}\r\n            showProjectOverlay={showProjectOverlay}\r\n            setShowProjectOverlay={setShowProjectOverlay}\r\n          />\r\n          <TaskDate\r\n            setTaskDate={setTaskDate}\r\n            showTaskDate={showTaskDate}\r\n            setShowTaskDate={setShowTaskDate}\r\n          />\r\n          <input\r\n            className=\"add-task__content\"\r\n            aria-label=\"Enter your task\"\r\n            data-testid=\"add-task-content\"\r\n            type=\"text\"\r\n            value={task}\r\n            onChange={(e) => setTask(e.target.value)}\r\n          />\r\n          <button\r\n            type=\"button\"\r\n            className=\"add-task__submit\"\r\n            data-testid=\"add-task\"\r\n            onClick={() =>\r\n              showQuickAddTask\r\n                ? addTask() && setShowQuickAddTask(false)\r\n                : addTask()\r\n            }\r\n          >\r\n            Add Task\r\n          </button>\r\n          {!showQuickAddTask && (\r\n            <span\r\n              className=\"add-task__cancel\"\r\n              data-testid=\"add-task-main-cancel\"\r\n              onClick={() => {\r\n                setShowMain(false);\r\n                setShowProjectOverlay(false);\r\n              }}\r\n              onKeyDown={(e) => {\r\n                if (e.key === 'Enter') {\r\n                  setShowMain(false);\r\n                  setShowProjectOverlay(false);\r\n                }\r\n              }}\r\n              aria-label=\"Cancel adding a task\"\r\n              tabIndex={0}\r\n              role=\"button\"\r\n            >\r\n              Cancel\r\n            </span>\r\n          )}\r\n          <span\r\n            className=\"add-task__project\"\r\n            data-testid=\"show-project-overlay\"\r\n            onClick={() => setShowProjectOverlay(!showProjectOverlay)}\r\n            onKeyDown={(e) => {\r\n              if (e.key === 'Enter') setShowProjectOverlay(!showProjectOverlay);\r\n            }}\r\n            tabIndex={0}\r\n            role=\"button\"\r\n          >\r\n            <FaRegListAlt />\r\n          </span>\r\n          <span\r\n            className=\"add-task__date\"\r\n            data-testid=\"show-task-date-overlay\"\r\n            onClick={() => setShowTaskDate(!showTaskDate)}\r\n            onKeyDown={(e) => {\r\n              if (e.key === 'Enter') setShowTaskDate(!showTaskDate);\r\n            }}\r\n            tabIndex={0}\r\n            role=\"button\"\r\n          >\r\n            <FaRegCalendarAlt />\r\n          </span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nAddTask.propTypes = {\r\n  showAddTaskMain: PropTypes.bool,\r\n  shouldShowMain: PropTypes.bool,\r\n  showQuickAddTask: PropTypes.bool,\r\n  setShowQuickAddTask: PropTypes.func,\r\n};\r\n","import React, { useState } from 'react';\r\nimport { FaPizzaSlice } from 'react-icons/fa';\r\nimport PropTypes from 'prop-types';\r\nimport { AddTask } from '../AddTask';\r\n\r\nexport const Header = ({ darkMode, setDarkMode }) => {\r\n  const [shouldShowMain, setShouldShowMain] = useState(false);\r\n  const [showQuickAddTask, setShowQuickAddTask] = useState(false);\r\n\r\n  return (\r\n    <header className=\"header\" data-testid=\"header\">\r\n      <nav>\r\n        <div className=\"logo\">\r\n          <img src=\"/images/logo.png\" alt=\"Todoist\" />\r\n        </div>\r\n        <div className=\"settings\">\r\n          <ul>\r\n            <li className=\"settings__add\">\r\n              <button\r\n                data-testid=\"quick-add-task-action\"\r\n                aria-label=\"Quick add task\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setShowQuickAddTask(true);\r\n                  setShouldShowMain(true);\r\n                }}\r\n              >\r\n                +\r\n              </button>\r\n            </li>\r\n            <li className=\"settings__darkmode\">\r\n              <button\r\n                data-testid=\"dark-mode-action\"\r\n                aria-label=\"Darkmode on/off\"\r\n                type=\"button\"\r\n                onClick={() => setDarkMode(!darkMode)}\r\n              >\r\n                <FaPizzaSlice />\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n\r\n      <AddTask\r\n        showAddTaskMain={false}\r\n        shouldShowMain={shouldShowMain}\r\n        showQuickAddTask={showQuickAddTask}\r\n        setShowQuickAddTask={setShowQuickAddTask}\r\n      />\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  darkMode: PropTypes.bool.isRequired,\r\n  setDarkMode: PropTypes.func.isRequired,\r\n};\r\n","import React, { useState } from 'react';\r\nimport { FaTrashAlt } from 'react-icons/fa';\r\nimport PropTypes from 'prop-types';\r\nimport { useProjectsValue, useSelectedProjectValue } from '../context';\r\nimport { firebase } from '../firebase';\r\n\r\nexport const IndividualProject = ({ project }) => {\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n  const { projects, setProjects } = useProjectsValue();\r\n  const { setSelectedProject } = useSelectedProjectValue();\r\n\r\n  const deleteProject = (docId) => {\r\n    firebase\r\n      .firestore()\r\n      .collection('projects')\r\n      .doc(docId)\r\n      .delete()\r\n      .then(() => {\r\n        setProjects([...projects]);\r\n        setSelectedProject('INBOX');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <span className=\"sidebar__dot\">•</span>\r\n      <span className=\"sidebar__project-name\">{project.name}</span>\r\n      <span\r\n        className=\"sidebar__project-delete\"\r\n        data-testid=\"delete-project\"\r\n        onClick={() => setShowConfirm(!showConfirm)}\r\n        onKeyDown={(e) => {\r\n          if (e.key === 'Enter') setShowConfirm(!showConfirm);\r\n        }}\r\n        tabIndex={0}\r\n        role=\"button\"\r\n        aria-label=\"Confirm deletion of project\"\r\n      >\r\n        <FaTrashAlt />\r\n        {showConfirm && (\r\n          <div className=\"project-delete-modal\">\r\n            <div className=\"project-delete-modal__inner\">\r\n              <p>Are you sure you want to delete this project?</p>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => deleteProject(project.docId)}\r\n              >\r\n                Delete\r\n              </button>\r\n              <span\r\n                onClick={() => setShowConfirm(!showConfirm)}\r\n                onKeyDown={(e) => {\r\n                  if (e.key === 'Enter') setShowConfirm(!showConfirm);\r\n                }}\r\n                tabIndex={0}\r\n                role=\"button\"\r\n                aria-label=\"Cancel adding project, do not delete\"\r\n              >\r\n                Cancel\r\n              </span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nIndividualProject.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelectedProjectValue, useProjectsValue } from '../context';\r\nimport { IndividualProject } from './IndividualProject';\r\n\r\nexport const Projects = ({ activeValue = null }) => {\r\n  const [active, setActive] = useState(activeValue);\r\n  const { setSelectedProject } = useSelectedProjectValue();\r\n  const { projects } = useProjectsValue();\r\n\r\n  return (\r\n    projects &&\r\n    projects.map((project) => (\r\n      <li\r\n        key={project.projectId}\r\n        data-testid=\"project-action-parent\"\r\n        data-doc-id={project.docId}\r\n        className={\r\n          active === project.projectId\r\n            ? 'active sidebar__project'\r\n            : 'sidebar__project'\r\n        }\r\n      >\r\n        <div\r\n          role=\"button\"\r\n          data-testid=\"project-action\"\r\n          tabIndex={0}\r\n          aria-label={`Select ${project.name} as the task project`}\r\n          onClick={() => {\r\n            setActive(project.projectId);\r\n            setSelectedProject(project.projectId);\r\n          }}\r\n          onKeyDown={(e) => {\r\n            if (e.key === 'Enter') {\r\n              setActive(project.projectId);\r\n              setSelectedProject(project.projectId);\r\n            }\r\n          }}\r\n        >\r\n          <IndividualProject project={project} />\r\n        </div>\r\n      </li>\r\n    ))\r\n  );\r\n};\r\n\r\nProjects.propTypes = {\r\n  activeValue: PropTypes.bool,\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { firebase } from '../firebase';\r\nimport { generatePushId } from '../helpers';\r\nimport { useProjectsValue } from '../context';\r\n\r\nexport const AddProject = ({ shouldShow = false }) => {\r\n  const [show, setShow] = useState(shouldShow);\r\n  const [projectName, setProjectName] = useState('');\r\n\r\n  const projectId = generatePushId();\r\n  const { projects, setProjects } = useProjectsValue();\r\n\r\n  const addProject = () =>\r\n    projectName &&\r\n    firebase\r\n      .firestore()\r\n      .collection('projects')\r\n      .add({\r\n        projectId,\r\n        name: projectName,\r\n        userId: 'jlIFXIwyAL3tzHMtzRbw',\r\n      })\r\n      .then(() => {\r\n        setProjects([...projects]);\r\n        setProjectName('');\r\n        setShow(false);\r\n      });\r\n\r\n  return (\r\n    <div className=\"add-project\" data-testid=\"add-project\">\r\n      {show && (\r\n        <div className=\"add-project__input\" data-testid=\"add-project-inner\">\r\n          <input\r\n            value={projectName}\r\n            onChange={(e) => setProjectName(e.target.value)}\r\n            className=\"add-project__name\"\r\n            data-testid=\"project-name\"\r\n            type=\"text\"\r\n            placeholder=\"Name your project\"\r\n          />\r\n          <button\r\n            className=\"add-project__submit\"\r\n            type=\"button\"\r\n            onClick={() => addProject()}\r\n            data-testid=\"add-project-submit\"\r\n          >\r\n            Add Project\r\n          </button>\r\n          <span\r\n            aria-label=\"Cancel adding project\"\r\n            data-testid=\"hide-project-overlay\"\r\n            className=\"add-project__cancel\"\r\n            onClick={() => setShow(false)}\r\n            onKeyDown={(e) => {\r\n              if (e.key === 'Enter') setShow(false);\r\n            }}\r\n            role=\"button\"\r\n            tabIndex={0}\r\n          >\r\n            Cancel\r\n          </span>\r\n        </div>\r\n      )}\r\n      <span className=\"add-project__plus\">+</span>\r\n      <span\r\n        aria-label=\"Add Project\"\r\n        data-testid=\"add-project-action\"\r\n        className=\"add-project__text\"\r\n        onClick={() => setShow(!show)}\r\n        onKeyDown={(e) => {\r\n          if (e.key === 'Enter') setShow(!show);\r\n        }}\r\n        role=\"button\"\r\n        tabIndex={0}\r\n      >\r\n        Add Project\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddProject.propTypes = {\r\n  shouldShow: PropTypes.bool,\r\n};\r\n","import React, { useState } from 'react';\r\nimport {\r\n  FaChevronDown,\r\n  FaInbox,\r\n  FaRegCalendarAlt,\r\n  FaRegCalendar,\r\n} from 'react-icons/fa';\r\nimport { Projects } from '../Projects';\r\nimport { useSelectedProjectValue } from '../../context';\r\nimport { AddProject } from '../AddProject';\r\n\r\nexport const Sidebar = () => {\r\n  const { setSelectedProject } = useSelectedProjectValue();\r\n  const [active, setActive] = useState('inbox');\r\n  const [showProjects, setShowProjects] = useState(true);\r\n\r\n  return (\r\n    <div className=\"sidebar\" data-testid=\"sidebar\">\r\n      <ul className=\"sidebar__generic\">\r\n        <li\r\n          data-testid=\"inbox\"\r\n          className={active === 'inbox' ? 'active' : undefined}\r\n        >\r\n          <div\r\n            data-testid=\"inbox-action\"\r\n            aria-label=\"Show inbox tasks\"\r\n            tabIndex={0}\r\n            role=\"button\"\r\n            onClick={() => {\r\n              setActive('inbox');\r\n              setSelectedProject('INBOX');\r\n            }}\r\n            onKeyDown={(e) => {\r\n              if (e.key === 'Enter') {\r\n                setActive('inbox');\r\n                setSelectedProject('INBOX');\r\n              }\r\n            }}\r\n          >\r\n            <span>\r\n              <FaInbox />\r\n            </span>\r\n            <span>Inbox</span>\r\n          </div>\r\n        </li>\r\n        <li\r\n          data-testid=\"today\"\r\n          className={active === 'today' ? 'active' : undefined}\r\n        >\r\n          <div\r\n            data-testid=\"today-action\"\r\n            aria-label=\"Show today's tasks\"\r\n            tabIndex={0}\r\n            role=\"button\"\r\n            onClick={() => {\r\n              setActive('today');\r\n              setSelectedProject('TODAY');\r\n            }}\r\n            onKeyDown={(e) => {\r\n              if (e.key === 'Enter') {\r\n                setActive('today');\r\n                setSelectedProject('TODAY');\r\n              }\r\n            }}\r\n          >\r\n            <span>\r\n              <FaRegCalendar />\r\n            </span>\r\n            <span>Today</span>\r\n          </div>\r\n        </li>\r\n        <li\r\n          data-testid=\"next_7\"\r\n          className={active === 'next_7' ? 'active' : undefined}\r\n        >\r\n          <div\r\n            data-testid=\"next_7-action\"\r\n            aria-label=\"Show tasks for the next 7 days\"\r\n            tabIndex={0}\r\n            role=\"button\"\r\n            onClick={() => {\r\n              setActive('next_7');\r\n              setSelectedProject('NEXT_7');\r\n            }}\r\n            onKeyDown={(e) => {\r\n              if (e.key === 'Enter') {\r\n                setActive('next_7');\r\n                setSelectedProject('NEXT_7');\r\n              }\r\n            }}\r\n          >\r\n            <span>\r\n              <FaRegCalendarAlt />\r\n            </span>\r\n            <span>Next 7 days</span>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n      <div\r\n        className=\"sidebar__middle\"\r\n        aria-label=\"Show/hide projects\"\r\n        onClick={() => setShowProjects(!showProjects)}\r\n        onKeyDown={(e) => {\r\n          if (e.key === 'Enter') setShowProjects(!showProjects);\r\n        }}\r\n        role=\"button\"\r\n        tabIndex={0}\r\n      >\r\n        <span>\r\n          <FaChevronDown\r\n            className={!showProjects ? 'hidden-projects' : undefined}\r\n          />\r\n        </span>\r\n        <h2>Projects</h2>\r\n      </div>\r\n\r\n      <ul className=\"sidebar__projects\">{showProjects && <Projects />}</ul>\r\n\r\n      {showProjects && <AddProject />}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { firebase } from '../firebase';\r\n\r\nexport const Checkbox = ({ id, taskDesc }) => {\r\n  const archiveTask = () => {\r\n    firebase.firestore().collection('tasks').doc(id).update({\r\n      archived: true,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"checkbox-holder\"\r\n      data-testid=\"checkbox-action\"\r\n      onClick={() => archiveTask()}\r\n      onKeyDown={(e) => {\r\n        if (e.key === 'Enter') archiveTask();\r\n      }}\r\n      aria-label={`Mark ${taskDesc} as done?`}\r\n      role=\"button\"\r\n      tabIndex={0}\r\n    >\r\n      <span className=\"checkbox\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nCheckbox.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  taskDesc: PropTypes.string.isRequired,\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Checkbox } from './Checkbox';\r\nimport { AddTask } from './AddTask';\r\nimport { useTasks } from '../hooks';\r\nimport { collatedTasks } from '../constants';\r\nimport { getTitle, getCollatedTitle, collatedTasksExist } from '../helpers';\r\nimport { useSelectedProjectValue, useProjectsValue } from '../context';\r\n\r\nexport const Tasks = () => {\r\n  const { selectedProject } = useSelectedProjectValue();\r\n  const { projects } = useProjectsValue();\r\n  const { tasks } = useTasks(selectedProject);\r\n\r\n  let projectName = '';\r\n\r\n  if (collatedTasksExist(selectedProject) && selectedProject) {\r\n    projectName = getCollatedTitle(collatedTasks, selectedProject).name;\r\n  }\r\n\r\n  if (\r\n    projects &&\r\n    projects.length > 0 &&\r\n    selectedProject &&\r\n    !collatedTasksExist(selectedProject)\r\n  ) {\r\n    projectName = getTitle(projects, selectedProject).name;\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = `${projectName}: Todoist`;\r\n  });\r\n\r\n  return (\r\n    <div className=\"tasks\" data-testid=\"tasks\">\r\n      <h2 data-testid=\"project-name\">{projectName}</h2>\r\n\r\n      <ul className=\"tasks__list\">\r\n        {tasks.map((task) => (\r\n          <li key={`${task.id}`}>\r\n            <Checkbox id={task.id} taskDesc={task.task} />\r\n            <span>{task.task}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <AddTask />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Sidebar } from './Sidebar';\r\nimport { Tasks } from '../Tasks';\r\n\r\nexport const Content = () => (\r\n  <section className=\"content\">\r\n    <Sidebar />\r\n    <Tasks />\r\n  </section>\r\n);\r\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Header } from './components/layout/Header';\nimport { Content } from './components/layout/Content';\nimport { ProjectsProvider, SelectedProjectProvider } from './context';\n\nexport const App = ({ darkModeDefault = false }) => {\n  const [darkMode, setDarkMode] = useState(darkModeDefault);\n\n  return (\n    <SelectedProjectProvider>\n      <ProjectsProvider>\n        <main\n          data-testid=\"application\"\n          className={darkMode ? 'darkmode' : undefined}\n        >\n          <Header darkMode={darkMode} setDarkMode={setDarkMode} />\n          <Content />\n        </main>\n      </ProjectsProvider>\n    </SelectedProjectProvider>\n  );\n};\n\nApp.propTypes = {\n  darkModeDefault: PropTypes.bool,\n};","import React from 'react';\nimport { render } from 'react-dom';\nimport { App } from './App';\nimport './App.scss';\n\nrender(<App />, document.getElementById('root'));"],"sourceRoot":""}